<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BooleanDisabled" xml:space="preserve">
    <value>停用</value>
  </data>
  <data name="BooleanDT" xml:space="preserve">
    <value>默认标题</value>
  </data>
  <data name="BooleanEnabled" xml:space="preserve">
    <value>启用</value>
  </data>
  <data name="BooleanJT" xml:space="preserve">
    <value>日文标题（可用时）</value>
  </data>
  <data name="BooleanNo" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="BooleanOff" xml:space="preserve">
    <value>关</value>
  </data>
  <data name="BooleanOn" xml:space="preserve">
    <value>开</value>
  </data>
  <data name="BooleanYes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="ChangeCommandBarDelay" xml:space="preserve">
    <value>在点击后显示或隐藏应用栏的延迟</value>
  </data>
  <data name="Connection" xml:space="preserve">
    <value>连接</value>
  </data>
  <data name="DefaultFactor" xml:space="preserve">
    <value>双击时的缩放比例</value>
  </data>
  <data name="DefaultSearchCategory" xml:space="preserve">
    <value>默认搜索分类</value>
  </data>
  <data name="DefaultSearchString" xml:space="preserve">
    <value>默认搜索关键字</value>
  </data>
  <data name="Global" xml:space="preserve">
    <value>全局</value>
  </data>
  <data name="Hah" xml:space="preserve">
    <value>H@H</value>
  </data>
  <data name="HahAddress" xml:space="preserve">
    <value>IP 地址：端口（留空以停用）</value>
  </data>
  <data name="ImageViewing" xml:space="preserve">
    <value>浏览</value>
  </data>
  <data name="KeepScreenOn" xml:space="preserve">
    <value>在浏览画集时保持屏幕常亮</value>
  </data>
  <data name="LoadLofiOnAllInternetConnection" xml:space="preserve">
    <value>始终加载压缩的图片</value>
  </data>
  <data name="LoadLofiOnMeteredInternetConnection" xml:space="preserve">
    <value>使用按流量计费的网络时加载压缩的图片</value>
  </data>
  <data name="MaxFactor" xml:space="preserve">
    <value>最大缩放比例</value>
  </data>
  <data name="MouseInertial" xml:space="preserve">
    <value>鼠标拖动惯性</value>
  </data>
  <data name="NeedVerify" xml:space="preserve">
    <value>启动应用时使用 Windows Hello 验证身份</value>
  </data>
  <data name="SaveLastSearch" xml:space="preserve">
    <value>保存最后一次搜索为默认</value>
  </data>
  <data name="Searching" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>应用主题</value>
  </data>
  <data name="UseJapaneseTitle" xml:space="preserve">
    <value>默认显示的画集标题</value>
  </data>
  <data name="ApplicationThemeDark" xml:space="preserve">
    <value>深色</value>
  </data>
  <data name="ApplicationThemeLight" xml:space="preserve">
    <value>浅色</value>
  </data>
  <data name="BooleanLeftToRight" xml:space="preserve">
    <value>从左向右</value>
  </data>
  <data name="BooleanRightToLeft" xml:space="preserve">
    <value>从右向左</value>
  </data>
  <data name="ReverseFlowDirection" xml:space="preserve">
    <value>翻页方向</value>
  </data>
  <data name="UseChineseTagTranslation" xml:space="preserve">
    <value>标签中文翻译</value>
  </data>
  <data name="UseJapaneseTagTranslation" xml:space="preserve">
    <value>标签日文翻译</value>
  </data>
  <data name="ExcludedLanguages" xml:space="preserve">
    <value>排除语言</value>
  </data>
  <data name="Chinese" xml:space="preserve">
    <value>中文</value>
  </data>
  <data name="Dutch" xml:space="preserve">
    <value>荷兰语</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>英语</value>
  </data>
  <data name="French" xml:space="preserve">
    <value>法语</value>
  </data>
  <data name="German" xml:space="preserve">
    <value>德语</value>
  </data>
  <data name="Hungarian" xml:space="preserve">
    <value>匈牙利语</value>
  </data>
  <data name="Italian" xml:space="preserve">
    <value>意大利语</value>
  </data>
  <data name="Japanese" xml:space="preserve">
    <value>日语</value>
  </data>
  <data name="Korean" xml:space="preserve">
    <value>韩语</value>
  </data>
  <data name="NotApplicable" xml:space="preserve">
    <value>不适用</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>其他</value>
  </data>
  <data name="Polish" xml:space="preserve">
    <value>波兰语</value>
  </data>
  <data name="Portuguese" xml:space="preserve">
    <value>葡萄牙语</value>
  </data>
  <data name="Russian" xml:space="preserve">
    <value>俄语</value>
  </data>
  <data name="Spanish" xml:space="preserve">
    <value>西班牙语</value>
  </data>
  <data name="Thai" xml:space="preserve">
    <value>泰语</value>
  </data>
  <data name="Vietnamese" xml:space="preserve">
    <value>越南语</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="AboutContent" xml:space="preserve">
    <value />
  </data>
  <data name="ExcludedTagNamespaces" xml:space="preserve">
    <value>排除标签类型</value>
  </data>
</root>