<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:rs3="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,5)"
                    xmlns:prers3="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,5)"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="using:ExViewer"
                    xmlns:controls="using:ExViewer.Controls"
                    xmlns:views="using:ExViewer.Views"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d"
                    xmlns:tk="using:Microsoft.Toolkit.Uwp.UI.Controls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008">
  <Style TargetType="controls:SplitViewButton">
    <Setter Property="Background"
            Value="Transparent" />
    <Setter Property="HorizontalContentAlignment"
            Value="Left" />
    <Setter Property="VerticalContentAlignment"
            Value="Center" />
    <Setter Property="Foreground"
            Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
    <Setter Property="FontSize"
            Value="16" />
    <Setter Property="Height"
            Value="48" />
    <Setter Property="UseSystemFocusVisuals"
            Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:SplitViewButton">
          <Grid x:Name="RootGrid"
                Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="48" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                   Storyboard.TargetName="RootGrid">
                      <DiscreteObjectKeyFrame KeyTime="0"
                                              Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                   Storyboard.TargetName="RootGrid">
                      <DiscreteObjectKeyFrame KeyTime="0"
                                              Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                   Storyboard.TargetName="Content">
                      <DiscreteObjectKeyFrame KeyTime="0"
                                              Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                   Storyboard.TargetName="Icon">
                      <DiscreteObjectKeyFrame KeyTime="0"
                                              Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="Content"
                              Margin="12,0"
                              AutomationProperties.AccessibilityView="Control"
                              Content="{TemplateBinding Content}"
                              Foreground="{TemplateBinding Foreground}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Grid.Column="1"
                              FontSize="{TemplateBinding FontSize}"
                              FontFamily="{TemplateBinding FontFamily}" />
            <ContentPresenter x:Name="Icon"
                              AutomationProperties.LabeledBy="{Binding Content}"
                              AutomationProperties.AccessibilityView="Raw"
                              Content="{TemplateBinding Icon}"
                              Foreground="{TemplateBinding Foreground}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="controls:SplitViewTab">
    <Setter Property="Background"
            Value="Transparent" />
    <Setter Property="HorizontalContentAlignment"
            Value="Left" />
    <Setter Property="VerticalContentAlignment"
            Value="Center" />
    <Setter Property="Foreground"
            Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
    <Setter Property="FontSize"
            Value="16" />
    <Setter Property="Height"
            Value="48" />
    <Setter Property="UseSystemFocusVisuals"
            Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:SplitViewTab">
          <Grid x:Name="RootGrid"
                ToolTipService.ToolTip="{TemplateBinding Content}"
                Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="48" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                   Storyboard.TargetName="RootGrid">
                      <DiscreteObjectKeyFrame KeyTime="0"
                                              Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                   Storyboard.TargetName="RootGrid">
                      <DiscreteObjectKeyFrame KeyTime="0"
                                              Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                   Storyboard.TargetName="Content">
                      <DiscreteObjectKeyFrame KeyTime="0"
                                              Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                   Storyboard.TargetName="Icon">
                      <DiscreteObjectKeyFrame KeyTime="0"
                                              Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <VisualState.Setters>
                    <Setter Target="rectangle.(UIElement.Visibility)"
                            Value="Visible" />
                  </VisualState.Setters>
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                   Storyboard.TargetName="Content">
                      <DiscreteObjectKeyFrame KeyTime="0"
                                              Value="{ThemeResource SystemControlForegroundAccentBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                   Storyboard.TargetName="Icon">
                      <DiscreteObjectKeyFrame KeyTime="0"
                                              Value="{ThemeResource SystemControlForegroundAccentBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentPresenter x:Name="Content"
                              Margin="12,0"
                              AutomationProperties.AccessibilityView="Control"
                              Content="{TemplateBinding Content}"
                              Foreground="{TemplateBinding Foreground}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Grid.Column="1"
                              FontSize="{TemplateBinding FontSize}"
                              FontFamily="{TemplateBinding FontFamily}" />
            <ContentPresenter x:Name="Icon"
                              AutomationProperties.AccessibilityView="Raw"
                              Content="{TemplateBinding Icon}"
                              Foreground="{TemplateBinding Foreground}" />
            <Rectangle x:Name="rectangle"
                       Fill="{ThemeResource SystemControlForegroundAccentBrush}"
                       HorizontalAlignment="Left"
                       Stroke="Black"
                       Width="4"
                       StrokeThickness="0"
                       Visibility="Collapsed" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="controls:CategoryTag">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:CategoryTag">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Margin="{TemplateBinding Padding}">
            <TextBlock x:Name="TextPresenter"
                       Foreground="{TemplateBinding Foreground}"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Background"
            Value="{ThemeResource SystemControlBackgroundAccentBrush}" />
    <Setter Property="Foreground"
            Value="{ThemeResource SystemControlPageTextBaseHighBrush}" />
    <Setter Property="MinWidth"
            Value="100" />
    <Setter Property="MinHeight"
            Value="16" />
    <Setter Property="HorizontalAlignment"
            Value="Left" />
    <Setter Property="VerticalAlignment"
            Value="Top" />
    <Setter Property="HorizontalContentAlignment"
            Value="Center" />
    <Setter Property="VerticalContentAlignment"
            Value="Center" />
    <Setter Property="UseSystemFocusVisuals"
            Value="True" />
    <Setter Property="IsTabStop"
            Value="False" />
  </Style>

  <Style TargetType="controls:CategoryToggleButton">
    <Setter Property="IsThreeState"
            Value="False" />
    <Setter Property="IsChecked"
            Value="True" />
    <Setter Property="VerticalAlignment"
            Value="Center" />
    <Setter Property="HorizontalAlignment"
            Value="Stretch" />
    <Setter Property="Padding"
            Value="0" />
    <Setter Property="UseSystemFocusVisuals"
            Value="True" />
    <Setter Property="FocusVisualMargin"
            Value="-2" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:CategoryToggleButton">
          <Grid x:Name="RootGrid"
                Padding="{TemplateBinding Margin}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                  <VisualState.Setters>
                    <Setter Target="Mask.(Shape.Fill)"
                            Value="{ThemeResource ToggleButtonCheckedDisabledBackgroundThemeBrush}" />
                    <Setter Target="ContentPresenter.(Control.Foreground)"
                            Value="{ThemeResource CategoryToggleButtonUncheckedForegroundThemeBrush}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="Mask.(Shape.Fill)"
                            Value="{ThemeResource ToggleButtonCheckedDisabledBackgroundThemeBrush}" />
                    <Setter Target="ContentPresenter.(Control.Foreground)"
                            Value="{ThemeResource CategoryToggleButtonUncheckedForegroundThemeBrush}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                    <DoubleAnimation Duration="0"
                                     To="0.7"
                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                     Storyboard.TargetName="Mask"
                                     d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="ContentPresenter.(Control.Foreground)"
                            Value="{ThemeResource CategoryToggleButtonUncheckedForegroundThemeBrush}" />
                    <Setter Target="Mask.(Shape.Fill)"
                            Value="{ThemeResource ToggleButtonPointerOverBackgroundThemeBrush}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CheckedPointerOver">
                  <VisualState.Setters>
                    <Setter Target="Mask.(Shape.Fill)"
                            Value="{ThemeResource ToggleButtonPointerOverBackgroundThemeBrush}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                    <DoubleAnimation Duration="0"
                                     To="0.7"
                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                     Storyboard.TargetName="Mask"
                                     d:IsOptimized="True" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="CheckedPressed">
                  <VisualState.Setters>
                    <Setter Target="Mask.(Shape.Fill)"
                            Value="{ThemeResource ToggleButtonPointerOverBackgroundThemeBrush}" />
                  </VisualState.Setters>
                  <Storyboard>
                    <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <controls:CategoryTag x:Name="ContentPresenter"
                                  Category="{TemplateBinding Category}"
                                  Control.IsTemplateFocusTarget="True" />
            <Rectangle x:Name="Mask"
                       StrokeThickness="0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="controls:HtmlTextBlock">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:HtmlTextBlock">
          <RichTextBlock x:Name="Presenter"
                         Foreground="{TemplateBinding Foreground}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="IsTabStop"
            Value="False" />
    <Setter Property="Foreground"
            Value="{ThemeResource SystemControlPageTextBaseHighBrush}" />
  </Style>

  <Style TargetType="controls:HighlightTextBlock">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:HighlightTextBlock">
          <TextBlock x:Name="Presenter"
                     Style="{TemplateBinding TextBlockStyle}"
                     Padding="{TemplateBinding Padding}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="IsTabStop"
            Value="False" />
    <Setter Property="Foreground"
            Value="{ThemeResource SystemControlPageTextBaseHighBrush}" />
  </Style>

  <Style TargetType="controls:PullToRefreshIndicator">
    <Setter Property="Height"
            Value="100" />
    <Setter Property="Width"
            Value="Auto" />
    <Setter Property="IsTabStop"
            Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:PullToRefreshIndicator">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Actived">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="txt"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0"
                                     Duration="0"
                                     BeginTime="0:0:0.05">
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="txt2"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1"
                                     Duration="0"
                                     BeginTime="0:0:0.05">
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="rect"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1"
                                     Duration="0:0:0.1">
                      <DoubleAnimation.EasingFunction>
                        <QuadraticEase EasingMode="EaseIn" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <TextBlock x:Name="txt"
                       x:Uid="Controls/PullToRefreshIndicator/PullTextBlock"
                       Text="Pull"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Bottom" />
            <TextBlock x:Name="txt2"
                       x:Uid="Controls/PullToRefreshIndicator/ReleaseTextBlock"
                       Text="Release"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Bottom"
                       Opacity="0" />
            <Rectangle x:Name="rect"
                       StrokeThickness="0"
                       Width="200"
                       Height="4"
                       Fill="{ThemeResource SystemControlForegroundAccentBrush}"
                       Margin="4"
                       Opacity="0.5"
                       VerticalAlignment="Bottom"
                       RenderTransformOrigin="0.5,0.5"
                       Grid.Row="1">
              <Rectangle.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleX="{Binding PullProgress, RelativeSource={RelativeSource TemplatedParent}}" />
                </TransformGroup>
              </Rectangle.RenderTransform>
            </Rectangle>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="controls:FavoriteCategoryPresenter">
    <Setter Property="HorizontalAlignment"
            Value="Left" />
    <Setter Property="VerticalAlignment"
            Value="Center" />
    <Setter Property="IsTabStop"
            Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:FavoriteCategoryPresenter">
          <StackPanel Orientation="Horizontal">
            <TextBlock x:Name="Icon"
                       Foreground="{TemplateBinding BorderBrush}"
                       Text="&#x2BC1;" />
            <TextBlock x:Name="Label"
                       x:DeferLoadStrategy="Lazy"
                       Margin="4,0,0,0" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="controls:MyContentDialog">
    <Setter Property="PrimaryButtonStyle"
            Value="{ThemeResource ButtonRevealStyle}" />
    <Setter Property="SecondaryButtonStyle"
            Value="{ThemeResource ButtonRevealStyle}" />
    <Setter Property="CloseButtonStyle"
            Value="{ThemeResource ButtonRevealStyle}" />
    <Setter Property="Foreground"
            Value="{ThemeResource ContentDialogForeground}" />
    <Setter Property="Background"
            Value="{ThemeResource ContentDialogBackground}" />
    <Setter Property="BorderBrush"
            Value="{ThemeResource ContentDialogBorderBrush}" />
    <Setter Property="IsTabStop"
            Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentDialog">
          <Border x:Name="Container">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DialogShowingStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition To="DialogHidden">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
                                                     Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
                                                     Storyboard.TargetProperty="IsHitTestVisible">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                Value="False" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                     Storyboard.TargetProperty="ScaleX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                Value="1.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.5"
                                              KeySpline="0.1,0.9 0.2,1.0"
                                              Value="1.05" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                     Storyboard.TargetProperty="ScaleY">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                Value="1.0" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.5"
                                              KeySpline="0.1,0.9 0.2,1.0"
                                              Value="1.05" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
                                                     Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                Value="1.0" />
                        <LinearDoubleKeyFrame KeyTime="0:0:0.083"
                                              Value="0.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition To="DialogShowing">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
                                                     Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                Value="Visible" />
                      </ObjectAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                     Storyboard.TargetProperty="ScaleX">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                Value="1.05" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.5"
                                              KeySpline="0.1,0.9 0.2,1.0"
                                              Value="1.0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform"
                                                     Storyboard.TargetProperty="ScaleY">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                Value="1.05" />
                        <SplineDoubleKeyFrame KeyTime="0:0:0.5"
                                              KeySpline="0.1,0.9 0.2,1.0"
                                              Value="1.0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
                                                     Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                Value="0.0" />
                        <LinearDoubleKeyFrame KeyTime="0:0:0.167"
                                              Value="1.0" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="DialogHidden" />
                <VisualState x:Name="DialogShowing">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Visibility"
                            Value="Visible" />
                    <Setter Target="BackgroundElement.TabFocusNavigation"
                            Value="Cycle" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DialogShowingWithoutSmokeLayer">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Visibility"
                            Value="Visible" />
                    <Setter Target="LayoutRoot.Background"
                            Value="{x:Null}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DialogSizingStates">
                <VisualState x:Name="DefaultDialogSizing" />
                <VisualState x:Name="FullDialogSizing">
                  <VisualState.Setters>
                    <Setter Target="BackgroundElement.VerticalAlignment"
                            Value="Stretch" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ButtonsVisibilityStates">
                <VisualState x:Name="AllVisible" />
                <VisualState x:Name="NoneVisible">
                  <VisualState.Setters>
                    <Setter Target="PrimaryButton.Visibility"
                            Value="Collapsed" />
                    <Setter Target="SecondaryButton.Visibility"
                            Value="Collapsed" />
                    <Setter Target="CloseButton.Visibility"
                            Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PrimaryVisible">
                  <VisualState.Setters>
                    <Setter Target="PrimaryButton.(Grid.Column)"
                            Value="2" />
                    <Setter Target="PrimaryButton.(Grid.ColumnSpan)"
                            Value="2" />
                    <Setter Target="PrimaryButton.Margin"
                            Value="2,0,0,0" />
                    <Setter Target="SecondaryButton.Visibility"
                            Value="Collapsed" />
                    <Setter Target="CloseButton.Visibility"
                            Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SecondaryVisible">
                  <VisualState.Setters>
                    <Setter Target="SecondaryButton.(Grid.Column)"
                            Value="2" />
                    <Setter Target="SecondaryButton.(Grid.ColumnSpan)"
                            Value="2" />
                    <Setter Target="SecondaryButton.Margin"
                            Value="2,0,0,0" />
                    <Setter Target="PrimaryButton.Visibility"
                            Value="Collapsed" />
                    <Setter Target="CloseButton.Visibility"
                            Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CloseVisible">
                  <VisualState.Setters>
                    <Setter Target="CloseButton.(Grid.Column)"
                            Value="2" />
                    <Setter Target="CloseButton.(Grid.ColumnSpan)"
                            Value="2" />
                    <Setter Target="CloseButton.Margin"
                            Value="2,0,0,0" />
                    <Setter Target="PrimaryButton.Visibility"
                            Value="Collapsed" />
                    <Setter Target="SecondaryButton.Visibility"
                            Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PrimaryAndSecondaryVisible">
                  <VisualState.Setters>
                    <Setter Target="PrimaryButton.(Grid.ColumnSpan)"
                            Value="2" />
                    <Setter Target="SecondaryButton.(Grid.Column)"
                            Value="2" />
                    <Setter Target="SecondaryButton.(Grid.ColumnSpan)"
                            Value="2" />
                    <Setter Target="SecondaryButton.Margin"
                            Value="2,0,0,0" />
                    <Setter Target="CloseButton.Visibility"
                            Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PrimaryAndCloseVisible">
                  <VisualState.Setters>
                    <Setter Target="PrimaryButton.(Grid.ColumnSpan)"
                            Value="2" />
                    <Setter Target="CloseButton.(Grid.Column)"
                            Value="2" />
                    <Setter Target="CloseButton.(Grid.ColumnSpan)"
                            Value="2" />
                    <Setter Target="CloseButton.Margin"
                            Value="2,0,0,0" />
                    <Setter Target="SecondaryButton.Visibility"
                            Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SecondaryAndCloseVisible">
                  <VisualState.Setters>
                    <Setter Target="SecondaryButton.(Grid.Column)"
                            Value="0" />
                    <Setter Target="SecondaryButton.(Grid.ColumnSpan)"
                            Value="2" />
                    <Setter Target="SecondaryButton.Margin"
                            Value="0,0,2,0" />
                    <Setter Target="CloseButton.(Grid.Column)"
                            Value="2" />
                    <Setter Target="CloseButton.(Grid.ColumnSpan)"
                            Value="2" />
                    <Setter Target="CloseButton.Margin"
                            Value="2,0,0,0" />
                    <Setter Target="PrimaryButton.Visibility"
                            Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DefaultButtonStates">
                <VisualState x:Name="NoDefaultButton" />
                <VisualState x:Name="PrimaryAsDefaultButton">
                  <VisualState.Setters>
                    <Setter Target="PrimaryButton.Style"
                            Value="{StaticResource AccentButtonStyle}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SecondaryAsDefaultButton">
                  <VisualState.Setters>
                    <Setter Target="SecondaryButton.Style"
                            Value="{StaticResource AccentButtonStyle}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="CloseAsDefaultButton">
                  <VisualState.Setters>
                    <Setter Target="CloseButton.Style"
                            Value="{StaticResource AccentButtonStyle}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="LayoutRoot"
                  rs3:Visibility="Collapsed"
                  rs3:Background="{ThemeResource SystemControlPageBackgroundMediumAltMediumBrush}">
              <prers3:Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
              </prers3:Grid.RowDefinitions>
              <prers3:Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
              </prers3:Grid.ColumnDefinitions>
              <Border x:Name="BackgroundElement"
                      Background="{TemplateBinding Background}"
                      FlowDirection="{TemplateBinding FlowDirection}"
                      BorderThickness="{ThemeResource ContentDialogBorderWidth}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      MaxWidth="{ThemeResource ContentDialogMaxWidth}"
                      MaxHeight="{ThemeResource ContentDialogMaxHeight}"
                      MinWidth="{ThemeResource ContentDialogMinWidth}"
                      MinHeight="{ThemeResource ContentDialogMinHeight}"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                  <ScaleTransform x:Name="ScaleTransform" />
                </Border.RenderTransform>

                <Grid x:Name="DialogSpace"
                      prers3:VerticalAlignment="Stretch"
                      Padding="{ThemeResource ContentDialogPadding}">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <ScrollViewer x:Name="ContentScrollViewer"
                                HorizontalScrollBarVisibility="Disabled"
                                VerticalScrollBarVisibility="Disabled"
                                ZoomMode="Disabled"
                                Margin="{ThemeResource ContentDialogContentScrollViewerMargin}"
                                IsTabStop="False">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                      </Grid.RowDefinitions>
                      <ContentControl x:Name="Title"
                                      Margin="{ThemeResource ContentDialogTitleMargin}"
                                      Content="{TemplateBinding Title}"
                                      ContentTemplate="{TemplateBinding TitleTemplate}"
                                      FontSize="20"
                                      FontFamily="XamlAutoFontFamily"
                                      FontWeight="Normal"
                                      Foreground="{TemplateBinding Foreground}"
                                      HorizontalContentAlignment="Stretch"
                                      VerticalContentAlignment="Stretch"
                                      IsTabStop="False">
                        <ContentControl.Template>
                          <ControlTemplate TargetType="ContentControl">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              MaxLines="2"
                                              TextWrapping="Wrap"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Margin="{TemplateBinding Padding}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                          </ControlTemplate>
                        </ContentControl.Template>
                      </ContentControl>
                      <ContentPresenter x:Name="Content"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}"
                                        FontSize="{ThemeResource ControlContentThemeFontSize}"
                                        FontFamily="{ThemeResource ContentControlThemeFontFamily}"
                                        Margin="{ThemeResource ContentDialogContentMargin}"
                                        Foreground="{TemplateBinding Foreground}"
                                        Grid.Row="1"
                                        TextWrapping="Wrap" />
                    </Grid>
                  </ScrollViewer>
                  <Grid x:Name="CommandSpace"
                        Grid.Row="1"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                        XYFocusKeyboardNavigation="Enabled">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition />
                      <ColumnDefinition Width="0.5*" />
                      <ColumnDefinition Width="0.5*" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button x:Name="PrimaryButton"
                            Content="{TemplateBinding PrimaryButtonText}"
                            IsEnabled="{TemplateBinding IsPrimaryButtonEnabled}"
                            Style="{TemplateBinding PrimaryButtonStyle}"
                            ElementSoundMode="FocusOnly"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Margin="0,0,2,0"
                            Grid.Column="0" />
                    <Button x:Name="SecondaryButton"
                            Content="{TemplateBinding SecondaryButtonText}"
                            IsEnabled="{TemplateBinding IsSecondaryButtonEnabled}"
                            Style="{TemplateBinding SecondaryButtonStyle}"
                            ElementSoundMode="FocusOnly"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Margin="2,0,2,0"
                            Grid.Column="1"
                            Grid.ColumnSpan="2" />
                    <Button x:Name="CloseButton"
                            Content="{TemplateBinding CloseButtonText}"
                            Style="{TemplateBinding CloseButtonStyle}"
                            ElementSoundMode="FocusOnly"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Margin="2,0,0,0"
                            Grid.Column="3" />
                  </Grid>
                </Grid>
              </Border>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="controls:Rating">
    <Setter Property="MinHeight"
            Value="20" />
    <Setter Property="UseSystemFocusVisuals"
            Value="True" />
    <Setter Property="IsTabStop"
            Value="True" />
    <Setter Property="IsFocusEngagementEnabled"
            Value="True" />
    <Setter Property="FocusVisualMargin"
            Value="-4,-2" />
    <Setter Property="AllowFocusWhenDisabled"
            Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:Rating">
          <Grid x:Name="LayoutRoot"
                Control.IsTemplateFocusTarget="True"
                Control.IsTemplateKeyTipTarget="True"
                Margin="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <TextBlock x:Name="Background"
                       Text="&#xE735;&#xE735;&#xE735;&#xE735;&#xE735;"
                       Opacity="0.5"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                       FontFamily="{ThemeResource SymbolThemeFontFamily}" />
            <TextBlock x:Name="Placeholder"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Text="&#xE735;&#xE735;&#xE735;&#xE735;&#xE735;"
                       FontFamily="{ThemeResource SymbolThemeFontFamily}">
              <TextBlock.Clip>
                <RectangleGeometry x:Name="PlaceholderClip" />
              </TextBlock.Clip>
            </TextBlock>
            <TextBlock x:Name="UserRating"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Text="&#xE735;&#xE735;&#xE735;&#xE735;&#xE735;"
                       Foreground="{ThemeResource SystemControlForegroundAccentBrush}"
                       FontFamily="{ThemeResource SymbolThemeFontFamily}">
              <TextBlock.Clip>
                <RectangleGeometry x:Name="UserRatingClip" />
              </TextBlock.Clip>
            </TextBlock>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
